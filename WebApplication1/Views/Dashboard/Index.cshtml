@model dynamic

@{
    ViewData["Title"] = "Dashboard";
}

<h2 class="mb-4 text-2xl font-semibold text-center">Dashboard de Monitorizare</h2>

<!-- CARDURI CENTRATE CU STIL CLASIC ALB -->
<div class="grid grid-cols-1 sm:grid-cols-3 gap-6 justify-items-center mb-6">
    <div class="bg-white p-6 rounded-2xl shadow text-center w-full max-w-xs">
        <h4 class="text-gray-500">Angajați</h4>
        <h2 class="text-2xl font-bold text-blue-700">@Model.TotalEmployees</h2>
    </div>
    <div class="bg-white p-6 rounded-2xl shadow text-center w-full max-w-xs">
        <h4 class="text-gray-500">Clienți</h4>
        <h2 class="text-2xl font-bold text-blue-700">@Model.TotalCustomers</h2>
    </div>
    <div class="bg-white p-6 rounded-2xl shadow text-center w-full max-w-xs">
        <h4 class="text-gray-500">Conturi blocate</h4>
        <h2 class="text-2xl font-bold text-blue-700">@Model.LoginAlerts</h2>
    </div>
</div>

<!-- GRAFIC CU SELECTOR INCORPORAT -->
<div class="mt-4 bg-white p-6 rounded-2xl shadow">
    <div class="flex justify-between items-center mb-4">
        <h4 class="text-lg font-semibold">Grafic Activitate (@Model.Days zile)</h4>
        <form method="get" class="flex space-x-2">
            <button type="submit" name="days" value="7" class="px-4 py-1 rounded-full font-medium shadow-md @(Model.Days == 7 ? "bg-blue-600 text-white" : "bg-gray-200 text-gray-700 hover:bg-blue-100")">
                7D
            </button>
            <button type="submit" name="days" value="30" class="px-4 py-1 rounded-full font-medium shadow-md @(Model.Days == 30 ? "bg-blue-600 text-white" : "bg-gray-200 text-gray-700 hover:bg-blue-100")">
                30D
            </button>
        </form>
    </div>
    <canvas id="loginChart" height="100"></canvas>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        const ctx = document.getElementById('loginChart').getContext('2d');
        const labels = @Html.Raw(Json.Serialize(((IEnumerable<dynamic>)Model.LoginsLogs).Select(l => l.Date)));
        const values = @Html.Raw(Json.Serialize(((IEnumerable<dynamic>)Model.LoginsLogs).Select(l => l.Count)));

        const loginChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Logări pe zi',
                    data: values,
                    backgroundColor: 'rgba(59, 130, 246, 0.2)',
                    borderColor: 'rgba(59, 130, 246, 1)',
                    borderWidth: 2,
                    fill: true,
                    tension: 0.4,
                    pointRadius: 4,
                    pointHoverRadius: 6
                }]
            },
            options: {
                responsive: true,
                scales: {
                    x: {
                        ticks: {
                            callback: function (value, index, values) {
                                const parts = labels[index].split(".");
                                const date = new Date(`${parts[2]}-${parts[1]}-${parts[0]}`);
                                return date.toLocaleDateString('en-US', { weekday: 'short', month: 'short', day: 'numeric' });
                            }
                        },
                        title: {
                            display: true,
                            text: 'Data'
                        }
                    },
                    y: {
                        beginAtZero: true,
                        title: {
                            display: true,
                            text: 'Număr logări'
                        }
                    }
                },
                plugins: {
                    legend: {
                        display: true,
                        position: 'top'
                    }
                }
            }
        });
    </script>
}
